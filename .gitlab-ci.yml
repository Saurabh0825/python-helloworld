---

# https://hub.docker.com/r/library/python/tags/
image: python:3.10.4-buster

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - pip install --upgrade pip virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install --upgrade --requirement requirements.txt
  - python --version
  - pip --version
  - virtualenv --version
  - echo isort $(isort --version-number)
  - black --version
  - pylint --version
  - flake8 --version
  - pytest --version

build:
  stage: build
  except: [tags]
  script:
    - echo check ...
    - isort --check --diff helloworld/*.py tests/*.py
    - black --check helloworld/*.py tests/*.py
    - pylint helloworld/*.py tests/*.py
    - echo test ...
    - pytest -v
         --html=cover/report.html
         --cov=helloworld
         --cov-report=html:cover
         tests/*.py
    - echo docs ...
    - (cd docs; make html)
    - echo run ...
    - python -m helloworld -v
    - python -m helloworld -h
    - python -m helloworld --version
  artifacts:
    paths:
      - target

pages:
  image: alpine
  stage: deploy
  only: [master]
  except: [tags]
  before_script:
    - echo Copying artifacts from target/docs/html to public
  script:
    - mv target/docs public
  artifacts:
    paths:
      - public
